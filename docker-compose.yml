services:

  #  Client key
  keycloak_auth:
    container_name: keycloak_auth
    image: quay.io/keycloak/keycloak:26.0.5
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=admin
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT_HTTPS=false
    ports:
      - "8080:8080"
    command: start-dev
    volumes:
      - keycloak_data:/opt/keycloak/data
    networks:
      - microservices-net

  # Client Database
  postgresql_client:
    container_name: microbank_client_db
    image: postgres:17
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: client_db
      PGDATA: /data/postgres
    volumes:
      - client_db:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  # Bank Database
  postgresql_bank:
    container_name: microbank_bank_db
    image: postgres:17
    environment:
      POSTGRES_DB: bank_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - bank_db:/data/postgres
    ports:
      - "5434:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  # PG Admin Dashboard
  pgadmin:
    container_name: ms_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - microservices-net
    restart: unless-stopped

#    # CONFIG SERVER
#  config-server:
#      image: tjc2746/config-server:latest
#      container_name: config-server
#      ports:
#        - "8888:8888"
#      networks:
#        - microservices-net
#
#    # DISCOVERY SERVICE (Eureka)
#  discovery-service:
#      image: tjc2746/discovery-service:latest
#      container_name: discovery-service
#      ports:
#        - "8761:8761"
#      depends_on:
#        - config-server
#      environment:
#        - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888/
#      networks:
#        - microservices-net
#
#    # BANKING SERVICE
#  banking-service:
#      image: tjc2746/banking-service:latest
#      container_name: banking-service
#      ports:
#        - "8081:8081"
#      depends_on:
#        - config-server
#        - discovery-service
#        - banking-db
#      environment:
#        - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888/
#        - SPRING_DATASOURCE_URL=jdbc:postgresql://microbank_client_db:5432/bank_db
#        - SPRING_DATASOURCE_USERNAME=root
#        - SPRING_DATASOURCE_PASSWORD=password
#      networks:
#        - microservices-net
#
#    # CLIENT SERVICE
#  client-service:
#      image: tjc2746/client-service:latest
#      container_name: client-service
#      ports:
#        - "8082:8082"
#      depends_on:
#        - config-server
#        - discovery-service
#        - client-db
#      environment:
#        - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888/
#        - SPRING_DATASOURCE_URL=jdbc:postgresql://microbank_client_db:5432/client_db
#        - SPRING_DATASOURCE_USERNAME=root
#        - SPRING_DATASOURCE_PASSWORD=password
#      networks:
#        - microservices-net
#
#    # API GATEWAY
#  gateway:
#      image: tjc2746/gateway:latest
#      container_name: gateway
#      ports:
#        - "8080:8080"
#      depends_on:
#        - config-server
#        - discovery-service
#      environment:
#        - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888/
#      networks:
#        - microservices-net

networks:
  microservices-net:
    driver: bridge

volumes:
  client_db:
  bank_db:
  pgadmin:
  mongo:
  keycloak_data: